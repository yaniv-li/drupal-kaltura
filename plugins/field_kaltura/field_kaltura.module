<?php

/**
 * Implementation of hook_field_info().
 */
function field_kaltura_field_info() {
  return array(
    'field_kaltura_entryid' => array(
      'label' => t('Kaltura Media field'),
      'description' => t('Kaltura media field.'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
        'kcw' => KalturaSettings_CW_UICONF_ID
        //add default settings here
      ),
      'instance_settings' => array(
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
        'kcw' => KalturaSettings_CW_UICONF_ID
      ),
      'default_widget' => 'all_media',
      'default_formatter' => 'field_kaltura_player_default',
    )
    );
}

/**
 * Implementation of hook_field_settings_form().
 */

function field_kaltura_field_settings_form($field, $instance, $has_data) {
  dsm($instance);
  dsm($field);
  dsm($has_data);
  //$field['cardinality'] = 1;
  //TODO: find a way of making the filed except only one value
  $settings = $field['settings'];
      $form = array();
 //specific field setting can come here (taxonomy integration/player selection/etc...)
      $form['thumbsize'] = array(
        '#type' => 'fieldset',
        '#title' => t('Thumbnail Dimensions'),
        '#description' => t('Note - these settings will only apply when choosing "Thumbnail" display'),
      );
      $form['thumbsize']['thumbsize_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Thumbnail Width'),
        '#size' => 5,
        '#default_value' => !empty($settings['thumbsize']['thumbsize_width']) ? $settings['thumbsize']['thumbsize_width'] : '',
      );
      $form['thumbsize']['thumbsize_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Thumbnail Height'),
        '#size' => 5,
        '#default_value' => !empty($settings['thumbsize']['thumbsize_height']) ? $settings['thumbsize']['thumbsize_height'] : '',
      );
    $saved_player = !empty($field['entry_widget']) ? $field['entry_widget'] : KalturaSettings_DEFAULT_VIDEO_PLAYER_UICONF;
    $players = kaltura_choose_player(0, 'video', 'entry', FALSE, $saved_player);
    $form['kaltura_entry_video_display'] = array(
    '#type' => 'fieldset',
    '#title' => t('Video Display'),
    );

    $form['kaltura_entry_video_display']['entry_widget'] = $players['default_widget'];
    $form['kaltura_entry_video_display']['entry_widget']['#default_value'] = $saved_player;

  $dynamic_dimension_js = '
  <script type="text/javascript">
  function set_video_player_dimension(uiconf)
  {
  document.getElementById("edit-player-height").value=get_video_player_height(uiconf);
  document.getElementById("edit-player-width").value=get_video_player_width(uiconf);
  }
  </script>
  ';

      $form['kaltura_entry_video_display']['player_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Player Width'),
        '#size' => 5,
        '#prefix' => $dynamic_dimension_js,
        '#default_value' => !empty($settings['kaltura_entry_video_display']['player_width']) ? $settings['kaltura_entry_video_display']['player_width'] : '400',
      );

      $form['kaltura_entry_video_display']['player_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Player Height'),
        '#size' => 5,
        '#default_value' => !empty($settings['kaltura_entry_video_display']['player_height']) ? $settings['kaltura_entry_video_display']['player_height'] : '330',
      );
      $form['kaltura_entry_video_display']['rotate'] = array(
        '#type' => 'checkbox',
        '#title' => t('Preview video in thumbnail'),
        '#default_value' => !empty($field['rotate']) ? $field['rotate'] : '0',
      );
      $form['kaltura_entry_video_display']['stretch'] = array(
        '#type' => 'checkbox',
        '#title' => t('Stretch video in thumbnail'),
        '#default_value' => !empty($field['stretch']) ? $field['stretch'] : '0',
      );

      $form['custom_cw'] = array(
        '#type' => 'textfield',
        '#title' => t('custom ui_conf'),
        '#size' => 6,
      );
      $form['delivery'] = array(
        '#type' => 'select',
        '#title' => t('Please select delivery type'),
        '#options' => drupal_map_assoc(array('HTTP', 'RTMP')),
        '#default_value' => 'HTTP',
      );

      switch ($instance['widget']['type']) {
        case 'field_kaltura_image':
          unset($form['custom_cw'], $form['delivery'], $form['kaltura_entry_video_display']['rotate'], $form['kaltura_entry_video_display']['entry_widget']);
          $form['kaltura_entry_video_display']['player_height']['#title'] = t('Image hight');
          $form['kaltura_entry_video_display']['player_width']['#title'] = t('Image width');
          break;

        case 'field_kaltura_audio':
          unset($form['kaltura_entry_video_display']['rotate'], $form['thumbsize']);

          break;
      }


    return $form;
}

function field_kaltura_field_settings_form_validate($element, &$form_state) {
  //TODO: add valdtion code
}


/**
 * Implements hook_field_widget_info().
 **/
function field_kaltura_field_widget_info() {
  return array (
    'field_kaltura_video' => array (
      'label' => t('Video only widget'),
      'field types' => array ('field_kaltura_entryid'),
    ),
    'field_kaltura_audio' => array (
      'label' => t('adio only widget'),
      'field types' => array ('field_kaltura_entryid'),
    ),
    'field_kaltura_image' => array (
      'label' => t('image only widget'),
      'field types' => array ('field_kaltura_entryid'),
    ),
    'field_kaltura_all_media' => array (
      'label' => t('All media types widget'),
      'field types' => array ('field_kaltura_entryid'),
    ),
  );
}

function field_kaltura_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $entry_val = isset($items[$delta]['entryid']) ? $items[$delta]['entryid'] : '';
  $mediat_val = isset($items[$delta]['mediatype']) ? $items[$delta]['mediatype'] : '';
  if (!empty($entry_val) && !empty($mediat_val)) {
    $query = db_select('node_kaltura', 'k')
      ->fields('k', array('kaltura_thumbnail_url'))
      ->condition('kaltura_entryid', $entry_val, '=')
      ->execute()
      ->fetchCol();
    $turl= $query[0];
    $opts['path'] = $turl;

    $element['thumb'] = array(
      '#markup' => '<div class="tumb">'. theme('image', $opts) . '</div>',
    );
  }
  $custom_cw  = $form_state['field'][$element['#field_name']][$element['#language']]['field']['settings']['custom_cw'];
  $element += array(
    '#delta' => $delta,
  );
  //$element['entryid'] = array();
  switch ($instance['widget']['type']) {
  case 'field_kaltura_video':
    $instance['uiconf'] = ($custom_cw) ? $custom_cw : KalturaSettings_CW_UICONF_ID_VIDEO;
    $widget = kaltura_widget_hendler($instance, $entry_val, $mediat_val);
    $element += $widget;
    break;
  case 'field_kaltura_audio':
    $instance['uiconf'] = ($custom_cw) ? $custom_cw : KalturaSettings_CW_UICONF_ID_AUDIO;
    $widget = kaltura_widget_hendler($instance, $entry_val, $mediat_val);
    $element += $widget;
    break;
  case 'field_kaltura_image':
    $instance['uiconf'] = ($custom_cw) ? $custom_cw : KalturaSettings_CW_UICONF_ID_IMAGE;
    $widget = kaltura_widget_hendler($instance, $entry_val, $mediat_val);
    $element += $widget;
    break;
  case 'field_kaltura_all_media':
    $instance['uiconf'] = ($custom_cw) ? $custom_cw : KalturaSettings_CW_UICONF_ID;
    $widget = kaltura_widget_hendler($instance, $entry_val, $mediat_val);
    $element += $widget;
    break;
   }

  return $element;
}

function kaltura_widget_hendler ($instance, $entry, $mediat) {
  //dsm($instance);
  $cw_vars = kaltura_format_cw_vars(array(
    'kshow_id' => 0,
    'partner_data' => '',
    'type' => 'entry',
    'context' => 'field',
    'field_id' => 'id',
    'ui_conf' => $instance['uiconf'],
  ));

  $action_buttons = '<input type="button" value="Add Kaltura Media" onclick="kalturaInitModalBox(\''. url('kaltura/contribution_wizard/'. $cw_vars) .'\', {width:680, height:380} );" />';
  /*
   *$field_thumbs = kaltura_get_field_thumbs($element['#value'][$field_key], $custom_name, 'Media', $element['#required']);
   *$element['data'][$custom_name .'_thumbs'] = array(
   *  '#type' => 'item',
   *  '#value' => '<div id="'. $custom_name .'_thumbs_div">'. $field_thumbs .'</div>',
   *);
   */
  $widget['entryid'] = array(
    '#prefix' => '<div id="entryid">',
    '#suffix' => '</div>',
    '#type' => 'hidden',
    '#default_value' => $entry,
  );
  $widget['mediatype'] = array(
    '#prefix' => '<div id="media-type">',
    '#suffix' => '</div>',
    '#type' => 'hidden',
    '#default_value' => $mediat,
  );
  $widget['button'] = array(
    '#type' => 'item',
    '#markup' => $action_buttons,
  );
  return $widget;
}

function field_kaltura_field_validate ($entity_type, $entity, $field, $instance, $langcode, $items, &$errors) {
     //dsm($items);
}

/**
 * Implements hook_field_widget_error().
 */
function field_kaltura_field_widget_error($element, $error, $form, &$form_state) {
  //debug($element);
}

/**
 * Implementation of hook_field_is_empty().
 */
function field_kaltura_field_is_empty($item, $field) {
  if (empty($item['entryid']) || empty($item['mediatype'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}



/**
 * Implementation of hook_theme().
 */
function field_kaltura_theme() {
  return array(
    'kaltura_metadata' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_player_default' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_player' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_player_title' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_player_meta' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_thumbnail_default' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_thumbnail' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_thumbnail_title_desc' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
    'kaltura_thumbnail_meta' => array(
      'variables' => array(),
      'file' => 'field_kaltura.theme.inc',
    ),
  );
}



/**
 * Implementation of hook_field_formatter_info().
 */
function field_kaltura_field_formatter_info() {
  return array(
    'field_kaltura_player_default' => array(
      'label' => t('Player with title and description'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_player' => array(
      'label' => t('Player only'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_player_title' => array(
      'label' => t('Player and Title'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_player_meta' => array(
      'label' => t('Player with metadata'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_thumbnail_only' => array(
      'label' => t('Thumbnail only'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_thumbnail_title' => array(
      'label' => t('Thumbnail with title'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_thumbnail_title_desc' => array(
      'label' => t('Thumbnail with title and description'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
    'field_kaltura_thumbnail_metadata' => array(
      'label' => t('Thumbnail and metadata'),
      'field types' => array('field_kaltura_entryid'),
      'setting' => array (
        'thumbsize_width' => variable_get('kaltura_video_entry_thumb_width', '120'),
        'thumbsize_height' => variable_get('kaltura_video_entry_thumb_height', '90'),
        'player_height' => variable_get('kaltura_video_entry_height', '364'),
        'player_width' => variable_get('kaltura_video_entry_width', '410'),
        'delivery' => 'HTTP',
        'stretch' => 0,
        'rotate' => 0,
      ),
    ),
  );
}

/**
   * Implements hook_field_formatter_settings_form().
 */

function field_kaltura_field_formatter_settings_form ($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  /*dsm($settings);*/
  /*dsm($field);*/
  $element = array();
 //specific field setting can come here (taxonomy integration/player selection/etc...)
      $element['thumbsize'] = array(
        '#type' => 'fieldset',
        '#title' => t('Thumbnail Dimensions'),
        '#description' => t('Note - these settings will only apply when choosing "Thumbnail" display'),
      );
      $element['thumbsize']['thumbsize_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Thumbnail Width'),
        '#size' => 5,
        '#default_value' => !empty($settings['thumbsize']['thumbsize_width']) ? $settings['thumbsize']['thumbsize_width'] : '',
      );
      $element['thumbsize']['thumbsize_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Thumbnail Height'),
        '#size' => 5,
        '#default_value' => !empty($settings['thumbsize']['thumbsize_height']) ? $settings['thumbsize']['thumbsize_height'] : '',
      );
    $saved_player = !empty($field['entry_widget']) ? $field['entry_widget'] : KalturaSettings_DEFAULT_VIDEO_PLAYER_UICONF;
    $players = kaltura_choose_player(0, 'video', 'entry', FALSE, $saved_player);
    $element['kaltura_entry_video_display'] = array(
    '#type' => 'fieldset',
    '#title' => t('Video Display'),
    );

    $element['kaltura_entry_video_display']['entry_widget'] = $players['default_widget'];
    $element['kaltura_entry_video_display']['entry_widget']['#default_value'] = $saved_player;

  $dynamic_dimension_js = '
  <script type="text/javascript">
  function set_video_player_dimension(uiconf)
  {
  document.getElementById("edit-player-height").value=get_video_player_height(uiconf);
  document.getElementById("edit-player-width").value=get_video_player_width(uiconf);
  }
  </script>
  ';

      $element['player_width'] = array(
        '#type' => 'textfield',
        '#title' => t('Player Width'),
        '#size' => 5,
        '#prefix' => $dynamic_dimension_js,
        '#default_value' => !empty($settings['player_width']) ? $settings['player_width'] : '400',
      );

      $element['player_height'] = array(
        '#type' => 'textfield',
        '#title' => t('Player Height'),
        '#size' => 5,
        '#default_value' => !empty($settings['player_height']) ? $settings['player_height'] : '330',
      );
      $element['dispaly_metadata'] = array(
        '#type' => 'checkbox',
        '#title' => t('Dispaly Metadata'),
        '#default_value' => !empty($settings['dispaly_metadata']) ? $settings['dispaly_metadata'] : '0',
      );
  /*dsm($field);*/
  return $element;
}

/**
   * Implements hook_field_formatter_settings_summary().
 */

function field_kaltura_field_formatter_settings_summary ($field, $instance, $view_mode) {
  /*dsm($field);*/
  /*dsm($instance);*/
  return '<div>ok</div>';

}

/**
 * Implements hook_field_instance_settings_form().
 */
function field_kaltura_field_instance_settings_form($field, $instance) {
}
function field_kaltura_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $field['settings']; // should be dispaly['settings'] when I figure it out
  $item = $items[0]['entryid'];
  $type = $items[0]['mediatype'];
  $query = db_select('node_kaltura', 'k')
    ->fields('k')
    ->condition('kaltura_entryid', $item, '=')
    ->execute()
    ->fetchAssoc();
  //$metadata = array();
  $metadata['views'] = $query['kaltura_views'];
  $metadata['plays'] = $query['kaltura_plays'];
  $metadata['votes'] = $query['kaltura_votes'];
  $metadata['rank'] = $query['kaltura_rank'];
  $metadata['total_rank'] = $query['kaltura_total_rank'];
  $thumb_url = $query['kaltura_thumbnail_url'];
  $meta = theme('kaltura_metadata', array('metadata' => $metadata));
  $thumb = $query['kaltura_thumbnail_url'];
  $path = $entity->uri['path']; //could be aproblem if this is not a node
  $user_id = $entity->uid;
  switch ($display['type']) {
  case 'field_kaltura_player_default':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_player_default', array('embed' => $embed, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description']));
    break;
  case 'field_kaltura_player':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_player', array('embed' => $embed, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description']));
    break;
  case 'field_kaltura_player_title':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_player_title', array('embed' => $embed, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description']));
    $element[0]['#markup'] = '<div class="kaltura">' . $embed . '</div>';
    break;
  case 'field_kaltura_player_meta':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_player_meta', array('embed' => $embed, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description'], 'meta' => $metadata));
    break;
  case 'field_kaltura_thumbnail_only':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_thumbnail_default', array('thub' => $thumb_url, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description'], 'meta' => $metadata));
    break;
  case 'field_kaltura_thumbnail_title':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_thumbnail_title', array('thub' => $thumb_url, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description'], 'meta' => $metadata));
    break;
  case 'field_kaltura_thumbnail_title_desc':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_thumbnail_title_desc', array('thub' => $thumb_url, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description'], 'meta' => $metadata));
    break;
  case 'field_kaltura_thumbnail_metadata':
    $embed = build_kaltura_embed($item, $type, $settings, $path, $user_id, $thumb_url);
    $element[0]['#markup'] = theme('kaltura_thumbnail_meta', array('thub' => $thumb_url, 'title' => $query['kaltura_title'], 'desc' => $query['kaltura_description'], 'meta' => $metadata));
    break;


  }

  //dsm($display);
  /*dsm($instance);*/
  return $element;
}

function field_kaltura_field_presave($entity_type, $entity, $field, $instance, $langcode, &$items) {
  //dsm($items);
  foreach ($items as $item) {
    $rec['kaltura_entryid'] = $item['entryid'];
    $rec['kaltura_media_type'] = $item['mediatype'];
    $query = db_select('node_kaltura', 'k')
      ->fields('k', array('kaltura_entryid'))
      ->condition('kaltura_entryid', $item['entryid'], '=')
      ->execute()
      ->fetchCol();
    if (empty($query)) {
      drupal_write_record('node_kaltura', $rec);
    }
    else {
      drupal_write_record('node_kaltura', $rec, 'kaltura_entryid');
    }
  }
}


function build_kaltura_embed($item, $type, $settings, $path, $uid, $thumb_url) {
  //dsm($settings);
 	$width = $settings['kaltura_entry_video_display']['player_width'];
 	$height = $settings['kaltura_entry_video_display']['player_height'];
if($type == 1 || $type == 5) {
  $delivery = ($settings['delivery'] == 'RTMP') ? 'streamerType=rtmp&' : '';

 	$uiconf = reset($settings['kaltura_entry_video_display']['entry_widget']);
  $kid = $item;
  $partnerId = variable_get('kaltura_partner_id', 0);
  $kaltura_server = (variable_get('kaltura_server_url', ''))? variable_get('kaltura_server_url', ''): KalturaSettings_SERVER_URL;
  $swf_url = KalturaHelpers::getSwfUrlForWidget('_' . $partnerId);
  $src = $swf_url . '/entry_id/' . $kid . '/uiconf_id/' . $uiconf;
  global $base_url;
  $orig_url = urlencode($base_url . '/' . $path);
  $embed = '<object
    id="kaltura_player"
    name="kaltura_player"
    type="application/x-shockwave-flash"
    allowFullScreen="true"
    allowNetworking="all"
    allowScriptAccess="always"
    height="' . $height . '"
    width="' . $width . '"
    rel="media:video"
    resource="' . $src . '"
    data="' . $src . '">
    <param name="allowFullScreen" value="true" />
    <param name="allowNetworking" value="all" />
    <param name="allowScriptAccess" value="always" />
    <param name="bgcolor" value="#000000" />
    <param name="flashVars" value="'. $delivery . '" />
    <param name="movie" value="' . $src . '" />
    </object>';
  }
  else{
    $vars['path'] = $thumb_url . '/width/'. $width .'/height/'. $height .'/type/1/quality/100';
    $embed = theme('image', $vars);
  }
return $embed;

}

function build_thumb_url() {
  $partnerId = variable_get('kaltura_partner_id', 0);
  $url = CDN_HOST . 'p/' . $partnerId . 'thumbnail/entry_id/';
  return $url;
}
