diff --git a/sites/all/modules/contrib/kaltura/plugins/field_kaltura/field_kaltura.module b/sites/all/modules/contrib/kaltura/plugins/field_kaltura/field_kaltura.module
index 953218a..f3b2222 100755
--- a/sites/all/modules/contrib/kaltura/plugins/field_kaltura/field_kaltura.module
+++ b/sites/all/modules/contrib/kaltura/plugins/field_kaltura/field_kaltura.module
@@ -3,8 +3,8 @@
 
 /**
  * @file
- * kaltura integration module - functions to provide kaltura as CCK field 
- * 
+ * kaltura integration module - functions to provide kaltura as CCK field
+ *
  */
 
 /**
@@ -76,14 +76,14 @@ function field_kaltura_field_settings($op, $field) {
         '#title' => t('Thumbnail Height'),
         '#size' => 5,
         '#default_value' => !empty($field['thumbsize_height']) ? $field['thumbsize_height'] : '',
-      );      
+      );
 	  $saved_player = !empty($field['entry_widget']) ? $field['entry_widget'] : KalturaSettings_DEFAULT_VIDEO_PLAYER_UICONF;
 	  $players = kaltura_choose_player(0, 'video', 'entry', FALSE, $saved_player);
 	  $form['kaltura_entry_video_display'] = array(
 		'#type' => 'fieldset',
 		'#title' => t('Video Display'),
 	  );
-	  
+	
 	  $form['kaltura_entry_video_display']['entry_widget'] = $players['default_widget'];
 	  $form['kaltura_entry_video_display']['entry_widget']['#default_value'] = $saved_player;
 
@@ -103,14 +103,19 @@ function field_kaltura_field_settings($op, $field) {
         '#size' => 5,
         '#prefix' => $dynamic_dimension_js,
         '#default_value' => !empty($field['player_width']) ? $field['player_width'] : '400',
-      );      
+      );
 
       $form['kaltura_entry_video_display']['player_height'] = array(
         '#type' => 'textfield',
         '#title' => t('Player Height'),
         '#size' => 5,
         '#default_value' => !empty($field['player_height']) ? $field['player_height'] : '330',
-      );      
+      );
+      $form['kaltura_entry_video_display']['dispaly_metadata'] = array(
+        '#type' => 'checkbox',
+        '#title' => t('Dispaly Metadata'),
+        '#default_value' => !empty($field['dispaly_metadata']) ? $field['dispaly_metadata'] : '0',
+      );
 
 	  $default_cw = variable_get('kaltura_video_entry_cw_type', KalturaSettings_CW_UICONF_ID);
 	  $default_cw = !empty($field['entry_cw']) ? $field['entry_cw'] : $default_cw;
@@ -120,11 +125,11 @@ function field_kaltura_field_settings($op, $field) {
 	  $form['custom_cw'] = $custom;
 
 	  $form['custom_cw']['#default_value'] = $custom_cw;
-  
+
       return $form;
 
     case 'save':
-      return array('allowed_values', 'allowed_values_php', 'thumbsize_height', 'thumbsize_width', 'entry_widget', 'entry_cw', 'custom_cw', 'player_height', 'player_width');
+      return array('allowed_values', 'allowed_values_php', 'thumbsize_height', 'thumbsize_width', 'entry_widget', 'entry_cw', 'custom_cw', 'player_height', 'player_width', 'dispaly_metadata');
 
     case 'database columns':
       $columns['value'] = array('type' => 'text', 'size' => 'big', 'not null' => FALSE, 'sortable' => TRUE);
@@ -173,7 +178,12 @@ function field_kaltura_field($op, &$node, $field, &$items, $teaser, $page) {
     case 'insert' :
    	//var_dump($field); var_dump($items);
       if (isset($items[0]['value'])) {
-        create_node_kaltura($node, $items, $field['type']);
+        create_node_kaltura($node, $items, $field['type'], $op);
+      }
+    case 'update' :
+   	//var_dump($field); var_dump($items);
+      if (isset($items[0]['value'])) {
+        create_node_kaltura($node, $items, $field['type'], $op);
       }
     case 'validate':
       $allowed_values = content_allowed_values($field);
@@ -207,10 +217,9 @@ function field_kaltura_field($op, &$node, $field, &$items, $teaser, $page) {
 /**
  * Make sure there is an entry in the node_kaltura table for mixes that are in fields, so we have a common place to store metadata.
  */
-function create_node_kaltura($node, $items, $type) {
+function create_node_kaltura($node, $items, $type, $op) {
  	$kaltura_client = KalturaHelpers::getKalturaClient();
 	$session_user = KalturaHelpers::getSessionUser();
-	
 	if ($kaltura_client) {
 		foreach($items as $item) {
 	//		$entries = $item['value'];
@@ -233,67 +242,114 @@ function create_node_kaltura($node, $items, $type) {
 				$node_kaltura->kstatus = $result->status;
 				$node_kaltura->kaltura_thumbnail_url = $result->thumbnailUrl;
 				$node_kaltura->kaltura_duration = $result->duration;
-				$node->kaltura_partner_data= $result->partnerData;
-				$node->kaltura_source= '';
-				$node->kaltura_source_id= '';
-				$node->kaltura_source_link= '';
-				$node->kaltura_width= '';
-				$node->kaltura_height= '';
-				$node->kaltura_download_url= $result->downloadUrl;
-				$node->kaltura_media_date= '';
-				$node->kaltura_views= $result->views;
-				$node->kaltura_plays= $result->plays;
-				$node->kaltura_votes= $result->votes;
-				$node->kaltura_rank= $result->rank;
-				$node->kaltura_total_rank= $result->totalRank;
+				$node_kaltura->kaltura_partner_data= $result->partnerData;
+				$node_kaltura->kaltura_source= '';
+				$node_kaltura->kaltura_source_id= '';
+				$node_kaltura->kaltura_source_link= '';
+				$node_kaltura->kaltura_width= '';
+				$node_kaltura->kaltura_height= '';
+				$node_kaltura->kaltura_download_url= $result->downloadUrl;
+				$node_kaltura->kaltura_media_date= '';
+				$node_kaltura->kaltura_views= $result->views;
+				$node_kaltura->kaltura_plays= $result->plays;
+				$node_kaltura->kaltura_votes= $result->votes;
+				$node_kaltura->kaltura_rank= $result->rank;
+				$node_kaltura->kaltura_total_rank= $result->totalRank;
 				
 				//TO DO: CM
 				//add extras here like node_kaltura module
 				
-				node_field_insert($node_kaltura);
+				node_field_insert($node_kaltura, $op);
 			}
 	 	}
 	}
 }
 
-function node_field_insert($node) {
-  $sql = 'INSERT INTO {node_kaltura} (vid, nid, kaltura_entryId, kaltura_tags, kaltura_admin_tags, kstatus, kaltura_media_type, kaltura_duration, '.
-    'kaltura_thumbnail_url, kaltura_partner_data, kaltura_source, kaltura_source_id, kaltura_source_link, kaltura_width, kaltura_height, '.
-    'kaltura_download_url, kaltura_media_date, kaltura_views, kaltura_plays, kaltura_votes, kaltura_rank, kaltura_total_rank, kaltura_entry_data)'.
-    ' VALUES (%d, %d, \'%s\', \'%s\', \'%s\', %d, %d, %d, \'%s\', \'%s\', %d, %d, \'%s\', %d, %d, \'%s\', \'%s\', %d, %d, %d, %d, %d, \'%s\')';
-  db_query($sql, $node->vid, $node->nid, $node->kaltura_entryId, $node->kaltura_tags, $node->kaltura_admin_tags, $node->kstatus, $node->kaltura_media_type,
-    $node->kaltura_duration, $node->kaltura_thumbnail_url, $node->kaltura_partner_data, $node->kaltura_source, $node->kaltura_source_id,
-    $node->kaltura_source_link, $node->kaltura_width, $node->kaltura_height, $node->kaltura_download_url, $node->kaltura_media_date, $node->kaltura_views,
-    $node->kaltura_plays, $node->kaltura_votes, $node->kaltura_rank, $node->kaltura_total_rank, $node->kaltura_entry_data);
-  //kaltura_update_mix_node_taxonomy($node);
+/*
+ *function node_field_insert($node) {
+ *  $sql = 'INSERT INTO {node_kaltura} (vid, nid, kaltura_entryId, kaltura_tags, kaltura_admin_tags, kstatus, kaltura_media_type, kaltura_duration, '.
+ *    'kaltura_thumbnail_url, kaltura_partner_data, kaltura_source, kaltura_source_id, kaltura_source_link, kaltura_width, kaltura_height, '.
+ *    'kaltura_download_url, kaltura_media_date, kaltura_views, kaltura_plays, kaltura_votes, kaltura_rank, kaltura_total_rank, kaltura_entry_data)'.
+ *    ' VALUES (%d, %d, \'%s\', \'%s\', \'%s\', %d, %d, %d, \'%s\', \'%s\', %d, %d, \'%s\', %d, %d, \'%s\', \'%s\', %d, %d, %d, %d, %d, \'%s\')';
+ *  db_query($sql, $node->vid, $node->nid, $node->kaltura_entryId, $node->kaltura_tags, $node->kaltura_admin_tags, $node->kstatus, $node->kaltura_media_type,
+ *    $node->kaltura_duration, $node->kaltura_thumbnail_url, $node->kaltura_partner_data, $node->kaltura_source, $node->kaltura_source_id,
+ *    $node->kaltura_source_link, $node->kaltura_width, $node->kaltura_height, $node->kaltura_download_url, $node->kaltura_media_date, $node->kaltura_views,
+ *    $node->kaltura_plays, $node->kaltura_votes, $node->kaltura_rank, $node->kaltura_total_rank, $node->kaltura_entry_data);
+ *  //kaltura_update_mix_node_taxonomy($node);
+ *}
+ */
+
+/**
+ * node_field_insert
+ * this function inserts/updates the kaltura node entry as added/edited from the cck field
+ * @param mixed $knode
+ * @param mixed $op
+ * @access public
+ * @return void
+ */
+function node_field_insert($knode, $op) {
+  if ($op == 'update') {
+    drupal_write_record('node_kaltura', $knode, 'vid');
+  }
+  else {
+    drupal_write_record('node_kaltura', $knode);
+  }
+}
+
+/**
+ * get_kaltura_metadata
+ * helper function that retrieves the meta data of the kaltura entry
+ * @param mixed $entry_id, $nid
+ * @access public
+ * @return metadata array
+ */
+function get_kaltura_metadata($entry_id, $nid) {
+  $sql = 'SELECT kaltura_duration, kaltura_views, kaltura_plays, kaltura_votes, kaltura_rank, kaltura_total_rank FROM {node_kaltura} WHERE kaltura_entryId = \'%s\' AND nid = \'%s\'';
+  $res = db_fetch_array(db_query($sql, $entry_id, $nid));
+  return $res;
 }
 
 
+function theme_kaltura_metadata($metadata) {
+  $out = '<div class="kaltura-metadata">';
+  $out .= '<span class="meta-item first">Video duration: ' . $metadata['kaltura_duration'] . '</span>';
+  $out .= '<span class="meta-item">Number of Views: ' . $metadata['kaltura_views'] . '</span>';
+  $out .= '<span class="meta-item">Number of palyes: ' . $metadata['kaltura_palyes'] . '</span>';
+  $out .= '<span class="meta-item">Votes: ' . $metadata['kaltura_votes'] . '</span>';
+  $out .= '<span class="meta-item">Rank: ' . $metadata['kaltura_rank'] . '</span>';
+  $out .= '<span class="meta-item last">Total rank: ' . $metadata['kaltura_total_rank'] . '</span>';
+  $out .= '</div>';
+  return $out;
+}
+
 function kaltura_get_default_display($item, $teaser, $node) {
- 
+
  $node_update_access = node_access('update',$node);
  $show_embed = user_access('view Kaltura embed code');
 
   $content_type = $item['#kaltura_field']['type_name'];
   $entries = explode(',', rtrim($item['value'], ','));
-  
+
   if (is_array($entries) && count($entries)) {
     foreach ($entries as $entry_id) {
+      if ($item['#kaltura_field']['dispaly_metadata'] == '1') {
+        $mdata = theme_kaltura_metadata(get_kaltura_metadata($entry_id, $node->nid));
+      }
     	$width = $item['#kaltura_field']['player_width'];
     	$height = $item['#kaltura_field']['player_height'];
     	$uiconf = (empty($item['#kaltura_field']['entry_widget']) ? '' : 'uiconf_id="'.$item['#kaltura_field']['entry_widget'].'"');
     	$dim ="";
       if (!$entry_id) continue;
-      
+
       if (!empty($width) && !empty($height))
       {
 		$dim = ' width="'.$width.'" height="'.$height.'"';
       }
-     $text = '<div class="field-entry-'. $entry_id .'">[kaltura-widget mix="'. $entry_id .'" size="large" '. $uiconf . $dim.' /]</div>';
+     $text = '<div class="field-entry-'. $entry_id .'">[kaltura-widget mix="'. $entry_id .'" size="large" '. $uiconf . $dim.' /]' . $mdata . '</div>';
 
     }
   }
- 
+
  return kaltura_replace_tags($text, FALSE, FALSE, $node_update_access, $show_embed, $content_type);
 }
 
@@ -303,21 +359,24 @@ function kaltura_get_full_display($item, $teaser, $node) {
 
   $content_type = $item['#kaltura_field']['type_name'];
   $entries = explode(',', rtrim($item['value'], ','));
-  
+
   if (is_array($entries) && count($entries)) {
     foreach ($entries as $entry_id) {
+      if ($item['#kaltura_field']['dispaly_metadata'] == '1') {
+        $mdata = theme_kaltura_metadata(get_kaltura_metadata($entry_id, $node->nid));
+      }
     	$width = $item['#kaltura_field']['thumbsize_width'];
     	$height = $item['#kaltura_field']['thumbsize_height'];
       if (!$entry_id) continue;
-      
-     $text = '<div class="field-entry-'. $entry_id .'">[kaltura-widget mix="'. $entry_id .'" size="large"  /]</div>';
+
+     $text = '<div class="field-entry-'. $entry_id .'">[kaltura-widget mix="'. $entry_id .'" size="large"  /]' . $mdata . '</div>';
 
     }
   }
- 
+
  return kaltura_replace_tags($text, FALSE, FALSE, $node_update_access, $show_embed, $content_type);
 
- 
+
 //  return $text;
 }
 
@@ -402,7 +461,7 @@ function field_kaltura_field_formatter_info() {
       'label' => t('Thumbnail'),
       'field types' => array('Kaltura_Media', 'Kaltura_Media_Remix'),
       'multiple values' => CONTENT_HANDLE_CORE,
-    ),        
+    ),
   );
 }
 
@@ -417,7 +476,7 @@ function theme_field_kaltura_formatter_default($element) {
  * Theme function for 'full' text field formatter.
  */
 function theme_field_kaltura_formatter_full($element) {
-  
+
  return kaltura_get_full_display($element['#item'], 0, $element['#node']);
 }
 
@@ -473,7 +532,7 @@ function field_kaltura_widget_info() {
       'callbacks' => array(
         'default value' => CONTENT_CALLBACK_DEFAULT,
       ),
-    ),    
+    ),
   );
 }
 
@@ -620,12 +679,12 @@ function field_kaltura_textfield_process($element, $edit, $form_state, $form) {
   $element['data'] = array('#tree' => 'true');
   $ui_conf = !empty($form['#field_info'][$element['#field_name']]['entry_cw']) ?
 							$form['#field_info'][$element['#field_name']]['entry_cw'] : 0;
-  
+
   if ($ui_conf == 1)
   {
 	$ui_conf = $form['#field_info'][$element['#field_name']]['custom_cw'];
   }
-  
+
   $cw_vars = kaltura_format_cw_vars(array(
     'kshow_id' => 0,
     'partner_data' => '',
@@ -634,7 +693,7 @@ function field_kaltura_textfield_process($element, $edit, $form_state, $form) {
     'field_id' => $custom_name,
     'ui_conf' => $ui_conf,
   ));
-  
+
   $action_buttons = '<input type="button" value="Add Kaltura Media" onclick="kalturaInitModalBox(\''. url('kaltura/contribution_wizard/'. $cw_vars) .'\', {width:680, height:380} );" />';
   $field_thumbs = kaltura_get_field_thumbs($element['#value'][$field_key], $custom_name, 'Media', $element['#required']);
   $element['data'][$custom_name .'_thumbs'] = array(
@@ -701,23 +760,23 @@ function field_kaltura_remix_textfield_process($element, $edit, $form_state, $fo
   $field_key = $element['#columns'][0];
   $delta = $element['#delta'];
   $custom_name = 'edit-'. str_replace('_', '-', $element['#field_name']) .'-'. $delta .'-'. $field_key;
-  
+
   $element['data'] = array('#tree' => 'true');
-  
+
   $kaltura_editor_width = (variable_get('kaltura_editor_width', ''))? variable_get('kaltura_editor_width', ''): KalturaSettings_SE_WIDTH;
   $kaltura_editor_height = (variable_get('kaltura_editor_height', ''))? variable_get('kaltura_editor_height', ''): KalturaSettings_SE_HEIGHT;
   $kaltura_editor_URL = (variable_get('kaltura_editor_URL', ''))? variable_get('kaltura_editor_URL', ''): KalturaSettings_SE_URL;
-  
-  
-  
-  //Allow passing of Kaltura entry ID as URL argument (mostly to facilitate cloning)  
+
+
+
+  //Allow passing of Kaltura entry ID as URL argument (mostly to facilitate cloning)
   $entry_id = arg(3);
   //Does this user have access to update the node associated with this entry? If so, it's ok to add it via URL parameter
-  
+
   if (isset($entry_id)) {
 	  $entry_metadata = katlura_get_metadata_for_mix($entry_id);
 	  $entry_access = node_access('update',node_load($entry_metadata->nid));
-	  
+	
 	  //If the user has access to edit this node OR this entry has no node associated with it (and hence no owner)
 	  if($entry_access || !$entry_metadata) {
 		$element['#value'][value] = isset($entry_id) ? $entry_id : NULL;
@@ -725,7 +784,7 @@ function field_kaltura_remix_textfield_process($element, $edit, $form_state, $fo
 		$entry_id = null;
 	  }
   }
-  
+
   $cw_vars = kaltura_format_cw_vars(array(
     'kshow_id' => 0,
     'partner_data' => '',
@@ -844,28 +903,28 @@ function field_kaltura_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
           }
         }
       }
-      
+
       // update taxonomy as entries tags
       if (is_array($kaltura_entries) && count($kaltura_entries)) {
         kaltura_update_field_entries_tags($kaltura_entries, $tags, $node->title);
       }
     }
   }
-  
-  
+
+
 }
 
 /*
  * helper function that calls Kaltura updateEntry service to update the kaltura DB with the metadata
  * of the node which a specific entry belongs to
  * TODO
- * CMAC 
+ * CMAC
  * changes
  * entry type to KalturaMediaEntry
  * api call changed to new version
  */
 function kaltura_update_field_entries_tags($entries, $tags, $name) {
-  
+
   $session_user = KalturaHelpers::getSessionUser();
   $kaltura_client = KalturaHelpers::getKalturaClient();
    //var_dump($kaltura_client->media);
@@ -876,7 +935,7 @@ function kaltura_update_field_entries_tags($entries, $tags, $name) {
   $entryMixing = new KalturaMixEntry();
   $entryMixing->tags = $tags;
   $entryMixing->name = $name;
-  
+
 /*  $entryBase = new KalturaBaseEntry();
   $entryBase->tags = $tags;
   $entryBase->name = $name;
@@ -900,7 +959,7 @@ function kaltura_update_field_entries_tags($entries, $tags, $name) {
 		}
 		else {
 			$result = $kaltura_client->media->update($entry_id, $entryMedia);
-		}    
+		}
     }
   }
-}
\ No newline at end of file
+}
